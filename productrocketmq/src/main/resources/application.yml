server:
  port: 9091
spring:
  application:
    name: productrocketmq
  redis:
    host:  192.168.9.202
    database: 8
    pool:
      max-active: 8
      min-idle: 1
      max-idle: 1
      max-wait: -1

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    #driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/jack
    username: root
    password: root

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
# 配置获取连接等待超时的时间
    maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery : SELECT 1
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
#druid datasouce database settings end


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  properties:
    hibernate:
      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  jackson:
    serialization:
      indent_output: true






eureka:
 client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.host:localhost}:${eureka.port:8761}/eureka/


#http://blog.csdn.net/qq_22841811/article/details/67783473
rocketmq:
  producer:
    # 发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
    groupName: jack
    #mq的nameserver地址,多个分号隔开
    namesrvAddr: localhost:9876
    #如果需要同一个jvm中不同的producer往不同的mq集群发送消息，需要设置不同的instanceName
    instanceName: jackProduct
    #topic名称
    topic: TEST
    #根据实际情况设置消息的tag
    tag: TEST
    #消息最大长度
    maxMessageSize: 131072 # 1024*128
    #发送消息超时时间
    sendMsgTimeout: 10000
  consumer:
    namesrvAddr: localhost:9876
    groupName: jack
    topic: sms
    tag: verifycode
    consumeThreadMin: 20
    consumeThreadMax: 64


#http://blog.csdn.net/cl_andywin/article/details/53992353
security:
    #oauth2:
      #client:
        #client-id: qwrt-client
        #client-secret: qwrt-secret
        #scope: read,write
        #auto-approve-scopes: '.*'
        #grant-type: password
    #user:
        #name: jack
        #password: jack
        #role: USER
    basic:
      enabled: false




